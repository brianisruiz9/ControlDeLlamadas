/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import clases.Helper;
import java.util.*;

/**
 *
 * @author SERVIDOR
 */
public class Principal extends javax.swing.JFrame implements Runnable {

    String hora, minutos, segundos, ampm;
    Calendar calendario;
    Thread h1;

    String rutaL;
    String rutaR;

    public Principal() {
        initComponents();
        h1 = new Thread(this);
        h1.start();
        setLocationRelativeTo(null);
        setVisible(true);
        rutaL = "src/datos/llamadas.txt";
        rutaR = "src/datos/recargas.txt";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblImagen = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnOpciones = new javax.swing.JMenu();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        mnSalir = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        mnAgregarLlamada = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        mnListadodeLlamadas = new javax.swing.JMenuItem();
        mnListadoPorOperador = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        mnCantidadLlamdas = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        mnAgregarRecarga = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        jMenu7 = new javax.swing.JMenu();
        mnListadoRecargas = new javax.swing.JMenuItem();
        jMenu8 = new javax.swing.JMenu();
        mnCantidadRecargas = new javax.swing.JMenuItem();
        mnHora = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblImagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/call.PNG"))); // NOI18N
        jPanel1.add(lblImagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 660, 500));

        jMenuBar1.setBackground(new java.awt.Color(153, 153, 255));
        jMenuBar1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 0), 4));

        mnOpciones.setText("Opciones");
        mnOpciones.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mnOpciones.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        mnOpciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnOpcionesActionPerformed(evt);
            }
        });
        mnOpciones.add(jSeparator1);

        mnSalir.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        mnSalir.setText("Salir");
        mnSalir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnSalirActionPerformed(evt);
            }
        });
        mnOpciones.add(mnSalir);

        jMenuBar1.add(mnOpciones);

        jMenu4.setText("Llamadas");
        jMenu4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenu4.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N

        mnAgregarLlamada.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        mnAgregarLlamada.setText("Agregar");
        mnAgregarLlamada.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mnAgregarLlamada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnAgregarLlamadaActionPerformed(evt);
            }
        });
        jMenu4.add(mnAgregarLlamada);

        jMenu1.setText("Reportes");
        jMenu1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenu1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jMenu2.setText("Listados");
        jMenu2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenu2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        mnListadodeLlamadas.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        mnListadodeLlamadas.setText("Listado de Llamadas");
        mnListadodeLlamadas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mnListadodeLlamadas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnListadodeLlamadasActionPerformed(evt);
            }
        });
        jMenu2.add(mnListadodeLlamadas);

        mnListadoPorOperador.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        mnListadoPorOperador.setText("Listado por Operador");
        mnListadoPorOperador.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mnListadoPorOperador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnListadoPorOperadorActionPerformed(evt);
            }
        });
        jMenu2.add(mnListadoPorOperador);

        jMenu1.add(jMenu2);

        jMenu3.setText("Cantidades");
        jMenu3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenu3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        mnCantidadLlamdas.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        mnCantidadLlamdas.setText("Cantidad de llamadas realizadas");
        mnCantidadLlamdas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mnCantidadLlamdas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnCantidadLlamdasActionPerformed(evt);
            }
        });
        jMenu3.add(mnCantidadLlamdas);

        jMenu1.add(jMenu3);

        jMenu4.add(jMenu1);

        jMenuBar1.add(jMenu4);

        jMenu5.setText("Recargas");
        jMenu5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenu5.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N

        mnAgregarRecarga.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        mnAgregarRecarga.setText("Agregar");
        mnAgregarRecarga.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mnAgregarRecarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnAgregarRecargaActionPerformed(evt);
            }
        });
        jMenu5.add(mnAgregarRecarga);

        jMenu6.setText("Reportes");
        jMenu6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenu6.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N

        jMenu7.setText("Listados");
        jMenu7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenu7.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N

        mnListadoRecargas.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        mnListadoRecargas.setText("Listado de Recargas");
        mnListadoRecargas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mnListadoRecargas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnListadoRecargasActionPerformed(evt);
            }
        });
        jMenu7.add(mnListadoRecargas);

        jMenu6.add(jMenu7);

        jMenu8.setText("Cantidades");
        jMenu8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenu8.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N

        mnCantidadRecargas.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        mnCantidadRecargas.setText("Cantidad de Recargas");
        mnCantidadRecargas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mnCantidadRecargas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnCantidadRecargasActionPerformed(evt);
            }
        });
        jMenu8.add(mnCantidadRecargas);

        jMenu6.add(jMenu8);

        jMenu5.add(jMenu6);

        jMenuBar1.add(jMenu5);

        mnHora.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        mnHora.setText("hora");
        mnHora.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        mnHora.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jMenuBar1.add(mnHora);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setSize(new java.awt.Dimension(678, 533));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void mnAgregarLlamadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnAgregarLlamadaActionPerformed
        Agrega a = new Agrega(this, true);
        a.setVisible(true);
    }//GEN-LAST:event_mnAgregarLlamadaActionPerformed

    private void mnOpcionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnOpcionesActionPerformed

    }//GEN-LAST:event_mnOpcionesActionPerformed

    private void mnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_mnSalirActionPerformed

    private void mnListadodeLlamadasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnListadodeLlamadasActionPerformed
        ListadoDeLlamadas lc = new ListadoDeLlamadas(this, true);
        lc.setVisible(true);
    }//GEN-LAST:event_mnListadodeLlamadasActionPerformed

    private void mnCantidadLlamdasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnCantidadLlamdasActionPerformed
        int cont;
        cont = Helper.traerDatos(rutaL).size();
        Helper.mensaje(this, "La cantidad de llamadas realizas son: " + cont, 1);
    }//GEN-LAST:event_mnCantidadLlamdasActionPerformed

    private void mnListadoPorOperadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnListadoPorOperadorActionPerformed
        ListadoPorOperador lc = new ListadoPorOperador(this, true);
        lc.setVisible(true);
    }//GEN-LAST:event_mnListadoPorOperadorActionPerformed

    private void mnAgregarRecargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnAgregarRecargaActionPerformed
        AgregarRecarga ar = new AgregarRecarga(this, true);
        ar.setVisible(true);
    }//GEN-LAST:event_mnAgregarRecargaActionPerformed

    private void mnCantidadRecargasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnCantidadRecargasActionPerformed
        int cont;
        cont = Helper.traerDatos(rutaR).size();
        Helper.mensaje(this, "La cantidad de recargas realizas son: " + cont, 1);
    }//GEN-LAST:event_mnCantidadRecargasActionPerformed

    private void mnListadoRecargasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnListadoRecargasActionPerformed
        ListadoDeRecargas lr = new ListadoDeRecargas(this, true);
        lr.setVisible(true);
    }//GEN-LAST:event_mnListadoRecargasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
                Acceso log = new Acceso();
                log.setAlwaysOnTop(true);
                log.setLocationByPlatform(true);
                log.setLocationRelativeTo(null);
                log.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JLabel lblImagen;
    private javax.swing.JMenuItem mnAgregarLlamada;
    private javax.swing.JMenuItem mnAgregarRecarga;
    private javax.swing.JMenuItem mnCantidadLlamdas;
    private javax.swing.JMenuItem mnCantidadRecargas;
    private javax.swing.JMenu mnHora;
    private javax.swing.JMenuItem mnListadoPorOperador;
    private javax.swing.JMenuItem mnListadoRecargas;
    private javax.swing.JMenuItem mnListadodeLlamadas;
    private javax.swing.JMenu mnOpciones;
    private javax.swing.JMenuItem mnSalir;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        Thread ct = Thread.currentThread();
        while (ct == h1) {
            calcula();
            mnHora.setText(hora + ":" + minutos + ":" + segundos + " " + ampm);
            try {
                Thread.sleep(1000);
            } catch (InterruptedException e) {
            }
        }
    }

    private void calcula() {
        Calendar calendario = new GregorianCalendar();
        Date fechaHoraActual = new Date();

        calendario.setTime(fechaHoraActual);
        ampm = calendario.get(Calendar.AM_PM) == Calendar.AM ? "AM" : "PM";
        if (ampm.equals("PM")) {
            int h = calendario.get(Calendar.HOUR_OF_DAY) - 12;
            hora = h > 9 ? "" + h : "0" + h;
        } else {
            hora = calendario.get(Calendar.HOUR_OF_DAY) > 9 ? "" + calendario.get(Calendar.HOUR_OF_DAY) : "0" + calendario.get(Calendar.HOUR_OF_DAY);
        }
        minutos = calendario.get(Calendar.MINUTE) > 9 ? "" + calendario.get(Calendar.MINUTE) : "0" + calendario.get(Calendar.MINUTE);
        segundos = calendario.get(Calendar.SECOND) > 9 ? "" + calendario.get(Calendar.SECOND) : "0" + calendario.get(Calendar.SECOND);
    }
}
